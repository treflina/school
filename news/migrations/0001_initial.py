# Generated by Django 4.2.1 on 2023-08-26 19:31

import core.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import modelcluster.fields
import wagtail.blocks
import wagtail.contrib.routable_page.models
import wagtail.contrib.table_block.blocks
import wagtail.documents.blocks
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("wagtailcore", "0084_query_alter_page_title_searchpromotion_and_more"),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="NewsIndexPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
            ],
            options={
                "verbose_name": "Wszystkie aktualności",
                "verbose_name_plural": "Wszystkie aktualności",
            },
            bases=(
                core.models.PagePaginationMixin,
                wagtail.contrib.routable_page.models.RoutablePageMixin,
                "wagtailcore.page",
            ),
        ),
        migrations.CreateModel(
            name="NewsDetailPage",
            fields=[
                (
                    "page_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="wagtailcore.page",
                    ),
                ),
                (
                    "alt_attr",
                    models.CharField(
                        blank=True,
                        help_text="Opis tekstowy zdjęcia głównego (najczęściej od 5 do 15 słów) mający\n        na celu umożliwienie przekazu treści osobom słabowidzącym.",
                        max_length=255,
                        verbose_name="Opis alternatywny",
                    ),
                ),
                (
                    "main_text",
                    wagtail.fields.RichTextField(
                        null=True, verbose_name="Tekst główny"
                    ),
                ),
                (
                    "body",
                    wagtail.fields.StreamField(
                        [
                            (
                                "text",
                                wagtail.blocks.RichTextBlock(
                                    blank=True,
                                    features=[
                                        "h2",
                                        "h3",
                                        "bold",
                                        "italic",
                                        "center",
                                        "right",
                                        "ol",
                                        "ul",
                                        "hr",
                                        "link",
                                        "document-link",
                                        "image",
                                    ],
                                    label="Tekst",
                                    null=True,
                                ),
                            ),
                            (
                                "table",
                                wagtail.contrib.table_block.blocks.TableBlock(
                                    label="Tabela",
                                    required=False,
                                    table_options={
                                        "contextMenu": {
                                            "items": {
                                                "---------": {"name": "---------"},
                                                "col_left": {
                                                    "name": "Wstaw kolumnę z lewej"
                                                },
                                                "col_right": {
                                                    "name": "Wstaw kolumnę z prawej"
                                                },
                                                "redo": {"name": "Powtórz"},
                                                "remove_col": {"name": "Usuń kolumnę"},
                                                "remove_row": {"name": "Usuń wiersz"},
                                                "row_above": {
                                                    "name": "Wstaw wiersz powyżej"
                                                },
                                                "row_below": {
                                                    "name": "Wstaw wiersz poniżej"
                                                },
                                                "undo": {"name": "Cofnij"},
                                            }
                                        },
                                        "renderer": "html",
                                    },
                                    template="streams/table_block.html",
                                ),
                            ),
                            (
                                "docs",
                                wagtail.blocks.ListBlock(
                                    wagtail.documents.blocks.DocumentChooserBlock(),
                                    label="Dokumenty do pobrania",
                                    required=False,
                                    template="streams/document_link_block.html",
                                ),
                            ),
                        ],
                        blank=True,
                        null=True,
                        use_json_field=True,
                        verbose_name="Dodatkowe teksty, tabele, dokumenty",
                    ),
                ),
                (
                    "highlight",
                    models.BooleanField(
                        default=False,
                        help_text="Wyświetl wprowadzaną aktualność jako pierwszą informację na głównej\n        stronie.",
                        verbose_name="Wyróżnienie na stronie głównej",
                    ),
                ),
                (
                    "publish_date",
                    models.DateField(
                        blank=True,
                        default=django.utils.timezone.now,
                        help_text="Data publikacji wyświetlana na stronie.",
                        null=True,
                        verbose_name="Data publikacji",
                    ),
                ),
                (
                    "author",
                    models.CharField(
                        blank=True,
                        help_text="Podaj autora, jeśli chcesz żeby ta informacja była wyświetlona\n            na stronie",
                        max_length=80,
                        null=True,
                        verbose_name="autor",
                    ),
                ),
                (
                    "banner_image",
                    models.ForeignKey(
                        help_text="Preferowana orientacja pozioma.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="core.customimage",
                        verbose_name="Zdjęcie główne",
                    ),
                ),
                (
                    "button_cta",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="wagtailcore.page",
                        verbose_name="Link do galerii zdjęć",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.categorysnippet",
                        verbose_name="Kategoria",
                    ),
                ),
            ],
            options={
                "verbose_name": "Artykuł",
                "verbose_name_plural": "Artykuły",
            },
            bases=("wagtailcore.page",),
        ),
        migrations.CreateModel(
            name="MiniGalleryImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "sort_order",
                    models.IntegerField(blank=True, editable=False, null=True),
                ),
                (
                    "alt_attr",
                    models.CharField(
                        blank=True,
                        help_text="Opis tekstowy zdjęcia (najczęściej od 5 do 15 słów) mający\n        na celu m.in. umożliwienie przekazu treści osobom słabowidzącym.",
                        max_length=255,
                        verbose_name="Opis alternatywny",
                    ),
                ),
                (
                    "image",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="+",
                        to="core.customimage",
                        verbose_name="Zdjęcie",
                    ),
                ),
                (
                    "page",
                    modelcluster.fields.ParentalKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="gallery_images",
                        to="news.newsdetailpage",
                    ),
                ),
            ],
            options={
                "ordering": ["sort_order"],
                "abstract": False,
            },
        ),
    ]
