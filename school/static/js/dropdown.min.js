"use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var o=0;o<t.length;o++){var s=t[o];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,_toPropertyKey(s.key),s)}}function _createClass(e,t,o){return t&&_defineProperties(e.prototype,t),o&&_defineProperties(e,o),Object.defineProperty(e,"prototype",{writable:!1}),e}function _toPropertyKey(e){e=_toPrimitive(e,"string");return"symbol"===_typeof(e)?e:String(e)}function _toPrimitive(e,t){if("object"!==_typeof(e)||null===e)return e;var o=e[Symbol.toPrimitive];if(void 0===o)return("string"===t?String:Number)(e);o=o.call(e,t||"default");if("object"!==_typeof(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}var MenuButtonActions=function(){function i(e){_classCallCheck(this,i),this.domNode=e,this.buttonNode=e.querySelector("button"),this.menuNode=e.querySelector('[role="menu"]'),this.menuitemNodes=[],this.firstMenuitem=!1,this.lastMenuitem=!1,this.firstChars=[],this.buttonNode.addEventListener("keydown",this.onButtonKeydown.bind(this)),this.buttonNode.addEventListener("click",this.onButtonClick.bind(this));for(var t=e.querySelectorAll('[role="menuitem"]'),o=0;o<t.length;o++){var s=t[o];this.menuitemNodes.push(s),s.tabIndex=-1,this.firstChars.push(s.textContent.trim()[0].toLowerCase()),s.addEventListener("keydown",this.onMenuitemKeydown.bind(this)),s.addEventListener("click",this.onMenuitemClick.bind(this)),s.addEventListener("mouseover",this.onMenuitemMouseover.bind(this)),this.firstMenuitem||(this.firstMenuitem=s),this.lastMenuitem=s}e.addEventListener("focusin",this.onFocusin.bind(this)),e.addEventListener("focusout",this.onFocusout.bind(this)),window.addEventListener("mousedown",this.onBackgroundMousedown.bind(this),!0)}return _createClass(i,[{key:"setFocusToMenuitem",value:function(t){this.menuitemNodes.forEach(function(e){e===t?(e.tabIndex=0,t.focus()):e.tabIndex=-1})}},{key:"setFocusToFirstMenuitem",value:function(){this.setFocusToMenuitem(this.firstMenuitem)}},{key:"setFocusToLastMenuitem",value:function(){this.setFocusToMenuitem(this.lastMenuitem)}},{key:"setFocusToPreviousMenuitem",value:function(e){e=e===this.firstMenuitem?this.lastMenuitem:(e=this.menuitemNodes.indexOf(e),this.menuitemNodes[e-1]);return this.setFocusToMenuitem(e),e}},{key:"setFocusToNextMenuitem",value:function(e){e=e===this.lastMenuitem?this.firstMenuitem:(e=this.menuitemNodes.indexOf(e),this.menuitemNodes[e+1]);return this.setFocusToMenuitem(e),e}},{key:"setFocusByFirstCharacter",value:function(e,t){1<t.length||(t=t.toLowerCase(),(e=this.menuitemNodes.indexOf(e)+1)>=this.menuitemNodes.length&&(e=0),-1<(e=-1===(e=this.firstChars.indexOf(t,e))?this.firstChars.indexOf(t,0):e)&&this.setFocusToMenuitem(this.menuitemNodes[e]))}},{key:"getIndexFirstChars",value:function(e,t){for(var o=e;o<this.firstChars.length;o++)if(t===this.firstChars[o])return o;return-1}},{key:"openPopup",value:function(){this.menuNode.style.display="block",this.buttonNode.setAttribute("aria-expanded","true")}},{key:"closePopup",value:function(){this.isOpen()&&(this.buttonNode.removeAttribute("aria-expanded"),this.menuNode.style.display="none")}},{key:"isOpen",value:function(){return"true"===this.buttonNode.getAttribute("aria-expanded")}},{key:"onFocusin",value:function(){this.domNode.classList.add("focus")}},{key:"onFocusout",value:function(){this.domNode.classList.remove("focus")}},{key:"onButtonKeydown",value:function(e){var t=!1;switch(e.key){case" ":case"Enter":case"ArrowDown":case"Down":this.openPopup(),this.setFocusToFirstMenuitem(),t=!0;break;case"Esc":case"Escape":this.closePopup(),t=!0;break;case"Up":case"ArrowUp":this.openPopup(),this.setFocusToLastMenuitem(),t=!0}t&&(e.stopPropagation(),e.preventDefault())}},{key:"onButtonClick",value:function(e){this.isOpen()?(this.closePopup(),this.buttonNode.focus()):(this.openPopup(),this.setFocusToFirstMenuitem()),e.stopPropagation(),e.preventDefault()}},{key:"onMenuitemKeydown",value:function(e){var t=e.currentTarget,o=e.key,s=!1;function i(e){return 1===e.length&&e.match(/\S/)}if(!(e.ctrlKey||e.altKey||e.metaKey)){if(e.shiftKey)i(o)&&(this.setFocusByFirstCharacter(t,o),s=!0),"Tab"===e.key&&(this.buttonNode.focus(),this.closePopup(),s=!0);else switch(o){case" ":case"Enter":this.closePopup(),this.performMenuAction(t),this.buttonNode.focus(),s=!0;break;case"Esc":case"Escape":this.closePopup(),this.buttonNode.focus(),s=!0;break;case"Up":case"ArrowUp":this.setFocusToPreviousMenuitem(t),s=!0;break;case"ArrowDown":case"Down":this.setFocusToNextMenuitem(t),s=!0;break;case"Home":case"PageUp":this.setFocusToFirstMenuitem(),s=!0;break;case"End":case"PageDown":this.setFocusToLastMenuitem(),s=!0;break;case"Tab":this.closePopup();break;default:i(o)&&(this.setFocusByFirstCharacter(t,o),s=!0)}s&&(e.stopPropagation(),e.preventDefault())}}},{key:"onMenuitemClick",value:function(e){e=e.currentTarget;this.closePopup(),this.buttonNode.focus(),this.performMenuAction(e)}},{key:"onMenuitemMouseover",value:function(e){e.currentTarget.focus()}},{key:"onBackgroundMousedown",value:function(e){this.domNode.contains(e.target)||this.isOpen()&&(this.closePopup(),this.buttonNode.focus())}}]),i}();window.addEventListener("load",function(){for(var e=document.querySelectorAll(".menu-button-actions"),t=0;t<e.length;t++)new MenuButtonActions(e[t])});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
