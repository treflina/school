@charset "UTF-8";*,:after,:before{box-sizing:border-box;margin:0;padding:0}html{height:100%;width:100%;font-size:62.5%;scroll-behavior:smooth}body{align-items:stretch;min-height:100vh;background-color:#fff;font-family:Martel Sans,sans-serif;font-size:1.6rem;line-height:1.5}.main,body{display:flex;flex-direction:column}.main{justify-content:center}.wrapper{max-width:1400px;width:100%;margin:0 auto;padding:0 10px}.wrapper-md{padding:0 100px}.heading-wrapper{align-items:center;gap:2rem;flex-wrap:wrap}.flex-wrapper,.heading-wrapper{display:flex;justify-content:space-between}.flex-wrapper{gap:30px;padding:0 50px 0 80px}@media screen and (max-width:75em){.flex-wrapper{padding:0 30px 0 50px}}@media screen and (max-width:62em){.flex-wrapper,.wrapper-md{padding:0 30px}}@media screen and (max-width:48em){.flex-wrapper,.wrapper-md{padding:0 20px}}@media screen and (max-width:31.25em){.flex-wrapper,.wrapper-md{padding:0 10px}}@media screen and (max-width:25em){.flex-wrapper{padding:0 5px}}.heading-primary{font-family:Rubik,sans-serif;font-size:3rem;line-height:1.3}.heading-secondary{margin-bottom:2rem}.heading-center-md{text-align:left}@media screen and (max-width:48em){.heading-center-md{text-align:center}}@media screen and (max-width:25em){.heading-primary,.heading-secondary{overflow-wrap:anywhere}}.screenReaderOnly{border:0;clip:rect(0 0 0 0);height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;width:1px}.not-link{text-decoration:none;margin-right:0}.not-link,.not-link:visited{color:inherit}.group:after{content:"";display:table;clear:both}.d-block{display:block}.text-center{text-align:center}.text-right{text-align:right}.text-red{color:red!important}.text-orange{color:#f66b0e!important}.text-violet{color:#46469d!important}.text-violetlight{color:#939!important}.text-green{color:#00703c!important}.mtb-1{margin-top:1rem;margin-bottom:1rem}.mtb-3{margin-top:3rem;margin-bottom:3rem}.bold{font-weight:700}.first-letter{color:#f66b0e}@keyframes a{0%{box-shadow:0 0 8px rgba(0,0,0,.5);transform:translateY(0)}to{box-shadow:0 0 25px rgba(0,0,0,.5);transform:translateY(-3px)}}@keyframes b{0%{box-shadow:0 0 25px rgba(0,0,0,.5);transform:translateY(-3px)}to{box-shadow:0 0 8px rgba(0,0,0,.5);transform:translateY(0)}}.in{animation:a .5s forwards}.out{animation:b .5s forwards}.breadcrumb{margin:.5rem 0 2rem}.breadcrumb__list{display:flex;flex-wrap:wrap;align-items:flex-end;list-style:none;margin-top:1rem;padding:0}.breadcrumb__list-item{color:#205375;font-weight:700;font-size:1.5rem;text-decoration:none}.breadcrumb__list-item:hover{text-decoration:underline}.breadcrumb__list-item--active{color:rgba(0,0,0,.9);font-weight:400;font-size:1.5rem}.breadcrumb__list-item--active:hover{text-decoration:none}.breadcrumb__list li:not(:last-child):after{display:inline-block;margin:0 .5rem;content:"â–¶";font-size:1.2rem;color:rgba(0,0,0,.8);color:#f3a26b}@media screen and (max-width:62em){.breadcrumb{margin:.5rem 0 0}}.checkered{display:flex;align-items:center;height:100%;background-image:linear-gradient(hsla(0,0%,100%,.8),hsla(0,0%,100%,.8)),url(/static/img/checkered.jpg)}.posts{padding:3em .5em;display:flex;justify-content:center}.posts__box-heading{padding:2em .75em .5em}.posts__cards{display:grid;grid-template-columns:repeat(auto-fill,minmax(350px,auto));gap:40px;justify-items:center;padding:3rem 2rem 0}.posts__main{position:relative}.posts__main--primary{display:flex;flex-wrap:wrap;justify-content:center;width:100%;max-width:1200px;margin:3rem 0;gap:40px}.posts__main--primary .posts__main-authorbox{margin-bottom:.5rem}.posts__main--primary .posts__main-author{margin-bottom:0;margin-left:1rem}.posts__main--primary p{margin-bottom:.5em}.posts__main--primary a{color:#205375;font-weight:700;-webkit-text-decoration-color:transparent;text-decoration-color:transparent;text-decoration-thickness:2px;transition:-webkit-text-decoration-color .2s;transition:text-decoration-color .2s;transition:text-decoration-color .2s,-webkit-text-decoration-color .2s;text-underline-offset:3px}.posts__main--primary a:active,.posts__main--primary a:focus,.posts__main--primary a:hover{text-decoration-thickness:2px;-webkit-text-decoration-color:#f3a26b;text-decoration-color:#f3a26b}.posts__main--primary .posts__main-link--primary{display:block;width:-moz-max-content;width:max-content;margin-top:2rem;transition:background-color .5s,transform .5s}.posts__main--primary .posts__main-link--primary:focus,.posts__main--primary .posts__main-link--primary:hover{transform:translateY(-3px)}.posts__main--secondary{display:flex;flex-direction:column;height:auto;max-width:500px;width:100%;margin:3rem 0 2rem;box-shadow:0 0 8px rgba(0,0,0,.5);overflow:hidden}.posts__main-img{display:block;object-fit:cover;object-position:top;width:100%}.posts__main-img--primary{flex:0 1 550px}.posts__main-img--secondary{width:100%;height:100%}.posts__main-box{display:flex;flex-direction:column}.posts__main-box--primary{flex:0 1 550px}.posts__main-box--secondary{justify-content:space-around;max-width:600px;padding:1em;height:100%}.posts__main-box ol,.posts__main-box ul{padding-left:1.5rem;margin-bottom:1em}.posts__main-box>p{margin-bottom:.5em}.posts__main-box>p a{color:#205375;font-weight:700;-webkit-text-decoration-color:#205375;text-decoration-color:#205375;text-decoration-thickness:1px;transition:-webkit-text-decoration-color .2s;transition:text-decoration-color .2s;transition:text-decoration-color .2s,-webkit-text-decoration-color .2s;position:relative;z-index:100}.posts__main-box>p a:active,.posts__main-box>p a:focus,.posts__main-box>p a:hover{text-decoration-thickness:2px;-webkit-text-decoration-color:#f3a26b;text-decoration-color:#f3a26b}.posts__main-link{display:inline-block;margin-left:auto;margin-top:auto;height:-moz-min-content;height:min-content;padding:.25em 1em;border-radius:20px;text-decoration:none;text-align:right;color:#205375;font-weight:700;font-size:1.5rem;box-shadow:0 0 3px #205375;transition:background-color .5s}.posts__main-link:focus,.posts__main-link:hover{background-color:#efefef}.posts__main-link--secondary:after{content:"";position:absolute;top:0;left:0;bottom:0;right:0}.posts__main-heading{font-weight:700;margin:.5em 0;overflow-wrap:anywhere}.posts__main-heading--primary{font-size:2.2rem}.posts__main-heading--secondary{font-size:2.1rem}.posts__main-text{margin-top:1.5rem;margin-bottom:1em}.posts__main-category{align-self:flex-start;padding:.25em 1em;margin-bottom:1em;font-weight:700;letter-spacing:1px}.posts__main-category--0{background-color:#efdae0;color:#914f4c}.posts__main-category--1{background-color:#dde6ed;color:#465f73}.posts__main-category--2{background-color:#e9fddf;color:#088251}.posts__main-category--3{background-color:#f5cfae;color:#8a4c09}.posts__main-category--4{background-color:#e3caa5;color:#603601}.posts__main-details{display:flex;justify-content:space-between;flex-wrap:wrap;width:100%;margin:0 auto;font-size:1.5rem;color:#665e5e}.posts__main-details--date{display:inline-block;padding:.25em 1em;background-color:hsla(0,0%,100%,.9)}.posts__categories{display:grid;grid-template-columns:1fr 7fr;margin:3rem 0 0;padding-bottom:.5em;padding-left:1em;padding-right:1em;border-top:1px solid rgba(0,0,0,.2);border-bottom:1px solid rgba(0,0,0,.2)}.posts__categories-list{grid-column:2/3;display:flex;justify-content:flex-end;flex-wrap:wrap;margin-left:auto;list-style:none}.posts__categories-link{margin-top:.5em;margin-left:1em;color:#205375;text-decoration:none;text-align:right;border-radius:20px;transition:box-shadow .3s,background-color .3s,color .3s,transform .3s}.posts__categories-link:active,.posts__categories-link:focus,.posts__categories-link:hover{box-shadow:0 0 3px #205375}.posts__categories-link--active{background-color:#205375;color:#fff}.posts__categories-category{display:inline-block;height:-moz-min-content;height:min-content;padding:.25em .75em;font-weight:700}.posts__categories-category--filter{grid-column:1/2;margin-top:.5em;color:#000}.posts__linktoall{display:flex;justify-content:center;max-width:-moz-max-content;max-width:max-content;padding:.25em .5em;margin-top:2em;margin-left:auto;margin-right:3em;color:#205375;text-decoration:none;font-weight:700;border-radius:20px;transition:box-shadow .3s,background-color .3s,color .3s}.posts__linktoall span{display:inline-block}.posts__linktoall--active,.posts__linktoall:active,.posts__linktoall:focus,.posts__linktoall:hover{box-shadow:0 0 3px #205375}.img-wrapper{flex:0 0 30rem;width:100%;min-width:100%;overflow:hidden}@media (max-width:1155px){.checkered{background-image:none;height:auto;display:block}}@media screen and (max-width:62em){.posts{padding:0 0 1em}.posts__list{justify-content:flex-end}.posts__main--primary{margin:3rem 0 2rem}.posts__main--secondary{margin:0}.posts__categories-list{justify-content:flex-end}}@media screen and (max-width:48em){.posts__cards{gap:30px}}@media screen and (max-width:37.5em){.posts__cards{padding:2rem 0}.posts__main--primary{padding:0 10px}.posts__main-img--primary{height:auto}.posts__categories-link,.posts__categories-link--gallery{margin-left:.25em}}@media screen and (max-width:31.25em){.posts__cards{grid-template-columns:auto}.posts__linktoall{margin-right:.5em}.posts__linktoall span{padding-right:.5em;text-align:right}.img-wrapper{flex:0 0 25rem}}@media screen and (max-width:25em){.posts__box-heading{padding:2em .5rem .5em}.posts__main{position:relative}.posts__main--primary{display:flex;flex-wrap:wrap;justify-content:center}.posts__main-box--secondary{padding:.75em}.posts__categories{padding-left:0}}.events{background-color:#efefef;padding:2em 1em;width:100%}.events__timeline{margin-top:4rem;border-top:3px solid rgba(17,43,60,.3)}.events__list{display:flex;justify-content:space-around;list-style:none}.event{display:inline-block;position:relative;text-align:center;padding:2em 1em 0;margin-right:0}.event:before{content:"";position:absolute;height:36px;border-right:2px dashed rgba(17,43,60,.3);top:0}.event__details-item{display:flex;flex-wrap:wrap;flex-direction:column;justify-content:center;align-items:center;margin:1rem 0 2.5rem}.event__details-square{min-width:65px;padding:.2em .6em;margin:0 .5em .3em}.event__details-date,.event__details-square{box-shadow:0 0 2px rgba(0,0,0,.4);font-weight:700}.event__details-date{position:absolute;top:-12px;left:0;right:0;width:-moz-max-content;width:max-content;margin:0 auto 1rem;padding:.3em .6em}.event__details-date--end{color:#000;margin:0 .5em .3em}.event__details-hour{color:rgba(0,0,0,.7);background-color:#fff}.event__details-text{margin-top:.25em}.event__details-link{margin:0 .5rem;vertical-align:middle}.event__details-linkdescr{color:inherit;text-decoration:none;cursor:pointer}@media screen and (max-width:62em){.events__timeline{margin-top:2rem}.events__list{flex-direction:column}.event{display:block;padding:70px 0 0}.event__details-item{flex-direction:row;margin:1rem 0 1.5rem}.event__details-date{top:38px}}.bg-soft-warning{background-color:#f3a26b}@media screen and (max-width:25em){.events{padding:2em .5rem}}.table{margin:2rem 0 1rem}div[tabindex="0"][aria-labelledby][role=region]{overflow:auto;scroll-snap-type:both mandatory;max-width:90vw}div[tabindex="0"][aria-labelledby][role=region]:focus{box-shadow:0 0 .5em rgba(0,0,0,.5);outline:.1em solid rgba(0,0,0,.1)}div[tabindex="0"][aria-labelledby][role=region] table{margin:0}div[tabindex="0"][aria-labelledby][role=region].colheaders{background:linear-gradient(#fff 30%,hsla(0,0%,100%,0)),linear-gradient(hsla(0,0%,100%,0),#fff 70%) 0 100%,radial-gradient(farthest-side at 50% 0,rgba(0,0,0,.2),transparent),radial-gradient(farthest-side at 50% 100%,rgba(0,0,0,.2),transparent) 0 100%;background-repeat:no-repeat;background-color:#fff;background-size:100% 4em,100% 4em,100% 1.4em,100% 1.4em;background-attachment:local,local,scroll,scroll}.tb-block{max-width:100vw;margin:.5rem 0;padding:.25rem;border-collapse:collapse;font-weight:400;font-size:1.6rem;table-layout:auto;width:100%;overflow:scroll}.caption-block{text-align:left;margin:1rem 0 .5rem;padding:.5rem 0;font-weight:700;font-size:1.8rem}.th-block{position:sticky;top:0;z-index:2;background-color:#efefef}.td-block,.th-block{position:relative;background-clip:padding-box;border:1px solid #777;padding:.75rem 1.5rem;text-align:left;vertical-align:top}.richtext-image{max-width:100%;height:auto;padding:0 1.5rem 1rem}.right{float:right}.left{float:left}.full-width{display:block;margin-left:auto;margin-right:auto}.responsive-object{position:relative}.responsive-object embed,.responsive-object iframe,.responsive-object object{position:absolute;top:0;left:0;width:100%;height:100%}@media screen and (max-width:48em){.tb-block{font-size:1.6rem}.td-block,.th-block{padding:.75rem}}@media screen and (max-width:37.5em){.td-block,.th-block{padding:.5rem}}.pagination{margin:2rem 0 1rem}.pagination__list{display:flex;flex-wrap:wrap;justify-content:center;list-style:none}.pagination__item-link{text-decoration:none;border:1px solid #efefef;color:#000}.pagination__item span{display:inline-block;padding:10px 14px;color:inherit}.pagination__item .active{background-color:rgba(246,107,14,.8);border:1px solid rgba(246,107,14,.8)}.menu-button-actions{margin:0;padding:0;z-index:5}.menu-button-actions button{display:inline-block;position:relative;margin:0;padding:6px 12px;background-color:#efefef;border:1px solid rgba(32,83,117,.5);font-size:1.6rem;border-radius:5px}.menu-button-actions [role=menu]{display:none;position:absolute;width:100%;margin:0;padding:7px 4px;border-radius:5px;background-color:#efefef}.menu-button-actions [role=menuitem]{margin:0;padding:6px 12px;display:block;width:100%;background-color:#efefef;color:#000;border-radius:5px;border:2px solid transparent}.menu-button-actions button svg.down{padding-left:.125em;fill:currentcolor;stroke:currentcolor}.menu-button-actions button[aria-expanded=true] svg.down{transform:rotate(180deg)}.menu-button-actions button:focus,.menu-button-actions button:hover,.menu-button-actions button[aria-expanded=true]{padding:4px 10px;border:3px solid #205375;background:#efefef;color:#222;outline:none;margin:0}.menu-button-actions [role=menuitem].focus,.menu-button-actions [role=menuitem]:focus{padding:6px 12px;border:2px solid #205375;background:rgba(246,107,14,.8);outline:none;margin:0}.select{position:relative}.select__list-link{display:inline-block;width:100%;color:inherit;text-decoration:none}.hide{display:none;opacity:0;transform:translateY(100%)}.cookie-box{position:fixed;bottom:0;left:0;justify-content:center;flex-direction:column;padding:1rem;max-height:60vh;background-color:rgba(32,83,117,.95);color:#efefef;box-shadow:0 0 20px rgba(0,0,0,.2);font-size:1.5rem;z-index:10}.cookie-box,.cookie-wrapper{display:flex;align-items:center;width:100%}.cookie-wrapper{position:relative;height:100%;padding:.5rem 1rem;overflow:auto}.cookie-btn{margin-left:10px;padding:.75rem 1.5rem;background-color:#f66b0e;border-radius:8px;border:1px solid #000;font-size:1.6rem;font-family:Rubik,sans-serif;cursor:pointer;transition:transform .3s,background-color .5s}.cookie-btn:active,.cookie-btn:focus,.cookie-btn:hover{transform:translateY(-1px);background-color:#ddd;box-shadow:inset 0 0 1px 2px rgba(0,0,0,.2)}@media screen and (max-width:31.25em){.cookie-wrapper{flex-direction:column}}.page-details{display:flex;flex-wrap:wrap;align-items:center;margin-bottom:1rem;color:rgba(0,0,0,.8)}.page-details>*,.page-details>*>*{padding-right:.5rem}.page-details .page-author{font-weight:700;padding-right:1rem}.page-details .page-author,.page-details .page-date{padding-bottom:0}.page-details .page-dbox{display:flex;align-items:center}.page-details svg{margin-top:-4px;color:rgba(246,107,14,.8)}.block-docs__list{list-style:none}.block-docs__list span{font-weight:400;font-size:1.5rem}.block-docs__list a{display:inline-block;margin:1rem 0 1rem 2rem;color:#205375;font-weight:700;-webkit-text-decoration-color:transparent;text-decoration-color:transparent;text-decoration-thickness:2px;transition:-webkit-text-decoration-color .2s;transition:text-decoration-color .2s;transition:text-decoration-color .2s,-webkit-text-decoration-color .2s;text-underline-offset:3px}.block-docs__list a:active,.block-docs__list a:focus,.block-docs__list a:hover{text-decoration-thickness:2px;-webkit-text-decoration-color:#f3a26b;text-decoration-color:#f3a26b}.block-docs__list a[href$=doc]:before,.block-docs__list a[href$=docx]:before,.block-docs__list a[href$=odt]:before,.block-docs__list a[href$=pdf]:before,.block-docs__list a[href$=xls]:before,.block-docs__list a[href$=xlsx]:before{display:inline-block;width:3rem;height:3rem;padding-left:1rem;padding-right:3rem;margin-left:-4rem;vertical-align:middle;content:url(/static/img/file-text.svg)}.block-docs__list a[href$=jpeg]:before,.block-docs__list a[href$=jpg]:before,.block-docs__list a[href$=png]:before,.block-docs__list a[href$=webp]:before{display:inline-block;width:3rem;height:3rem;padding-left:1rem;padding-right:3rem;margin-left:-4rem;vertical-align:middle;content:url(/static/img/file-img.svg)}.block{display:flex;flex-direction:column;align-items:center}.block__image,.block__table{margin:2rem 0 1rem}.block__text{margin:1rem 0;line-height:1.7}.block__image{max-width:600px;height:auto;overflow:hidden}.block__image-img{height:100%;width:100%;object-fit:contain;object-position:center}.block__text{width:100%}.block__text a{color:#205375;font-weight:700;-webkit-text-decoration-color:#205375;text-decoration-color:#205375;text-decoration-thickness:1px;transition:-webkit-text-decoration-color .2s;transition:text-decoration-color .2s;transition:text-decoration-color .2s,-webkit-text-decoration-color .2s}.block__text a:active,.block__text a:focus,.block__text a:hover{text-decoration-thickness:2px;-webkit-text-decoration-color:#f3a26b;text-decoration-color:#f3a26b}.block__text ol,.block__text ul{margin-left:3rem;padding-bottom:.5em}@media screen and (max-width:48em){.block-docs__list{margin-left:1rem}}.lucky-num{display:flex;justify-content:center;align-items:center;width:46rem;height:-moz-max-content;height:max-content;padding-right:2rem;font-weight:700;margin:1rem 0 -3rem auto;border-bottom:2px solid #ddd}.lucky-num__imgbox{position:relative;width:60px;height:60px;margin:0 1rem}.lucky-num__img{width:100%;height:100%;object-fit:cover;object-position:center}.lucky-num__num{position:absolute;top:50%;left:49%;transform:translate(-50%,-50%);font-weight:700;font-size:3rem;color:#e8e885}.lucky-num__date{font-size:1.7rem}@media screen and (max-width:62em){.lucky-num{position:relative;display:flex;align-items:center;width:100%;height:-moz-max-content;height:max-content;font-weight:700;padding:.5rem 2rem;margin:1rem 0 -1rem;border-top:0;border-bottom:0;box-shadow:0 2px 5px -2px #888}.lucky-num__date{width:-moz-max-content;width:max-content}}@media screen and (max-width:37.5em){.lucky-num{justify-content:center}.lucky-num__date{width:25rem;max-width:250px;font-size:1.6rem}.lucky-num__imgbox{width:5rem;height:5rem;margin-left:.3rem}.lucky-num__num{font-size:2.5rem}}.nav{box-shadow:0 0 6px rgba(0,0,0,.6)}.nav__wrapper{position:relative;display:flex;justify-content:space-between;align-items:center;flex-wrap:wrap;max-width:1400px;margin:0 auto}.nav__list{display:inline-flex;list-style:none}.nav__list-item{position:relative;display:block;height:90px;margin:auto 0}.nav__list-icon{pointer-events:none}.nav__list-link{display:inline-flex;justify-content:center;align-items:center;height:100%;padding:0 1em;text-decoration:none;color:#000;font-size:1.8rem;font-weight:700;border-top:5px solid transparent;transition:background-color .3s,border-top-color .3s}.nav__list-link:focus,.nav__list-link:hover{background-color:#efefef;border-top-color:#205375}.nav__btn{border-left:none;border-right:none;border-bottom:none;cursor:pointer;font-family:Martel Sans,sans-serif;background-color:inherit}.nav__dropdown{display:none;position:absolute;flex-direction:column;top:85px;width:-moz-max-content;width:max-content;max-width:100vw;min-width:300px;max-height:0;background-color:#fff;box-shadow:0 0 3px rgba(0,0,0,.2);border-bottom:4px solid #205375;list-style:none;z-index:10;opacity:0;overflow:hidden}.nav__dropdown-link{display:inline-block;padding:.75em;width:100%;box-shadow:0 0 1px rgba(0,0,0,.2);text-decoration:none;color:#000;transition:background-color .3s}.nav__dropdown-link:focus,.nav__dropdown-link:hover{background-color:rgba(246,107,14,.8)}.nav__search{display:flex;width:25rem;margin-left:auto;margin-right:2em;padding:.5em 0}.nav__search-btn,.nav__search-input{border:2px solid #000;font-size:inherit}.nav__search-input{flex-grow:2;width:50vw;padding:.25em .5em .25em .75em;border-radius:15px 0 0 15px;font-family:Martel Sans,sans-serif}.nav__search-input:focus{border:2px solid #205375;background-color:#efefef}.nav__search-btn{padding:.1em .5em .1em .25em;background-color:#000;border-left:2px solid transparent;border-radius:0 15px 15px 0;cursor:pointer;transition:background-color .3s,transform .3s,color .3s}.nav__search-btn:focus,.nav__search-btn:hover{background-color:#205375;border:2px solid #205375}.nav__search-btn:active img{transform:scale(.9)}.hamburger{display:none}.show{display:flex;opacity:1;max-height:-moz-min-content;max-height:min-content}@media screen and (max-width:75em){.nav__search{position:absolute;top:75px;right:0;z-index:9}}@media screen and (max-width:62em){.hamburger{display:block;position:relative;margin-right:1rem;padding-bottom:0;font-size:1.6rem;line-height:1.5;opacity:1}.hamburger,.hamburger-inner,.hamburger-inner:after,.hamburger-inner:before{z-index:500}.hamburger-text{display:block;color:#000;width:6rem}.nav{flex-wrap:wrap-reverse;justify-content:flex-end;max-width:100%;min-height:6.6rem}.nav__wrapper{max-width:100vw}.nav__search{position:static;width:-moz-min-content;width:min-content;max-width:280px;margin-right:.5em;margin:0 auto}.nav__list{display:none;align-items:stretch}.nav__list--active{position:absolute;top:6.4rem;left:0;display:flex;align-items:center;flex-direction:column;height:calc(100vh - 6.4rem);width:100%;padding:5rem 0;box-shadow:none;text-align:center;overflow:auto;background-color:#fff;z-index:8}.nav__list-link{width:-moz-max-content;width:max-content;min-width:320px;height:auto;padding:1em;line-height:1;border-top:none;border-left:5px solid transparent;transition:border-left-color .3s}.nav__list-link:active,.nav__list-link:focus,.nav__list-link:hover{border-left-color:#205375}.nav__list-item{height:-moz-min-content;height:min-content;padding:0 .5em;margin:0}.nav__dropdown{position:static;width:-moz-max-content;width:max-content;margin:0 auto;box-shadow:none;border-bottom:none}.nav__dropdown-link{box-shadow:none;min-width:320px}.nav__dropdown.show{display:flex;opacity:1;max-height:-moz-min-content;max-height:min-content}}.skipnav{line-height:1.5;text-align:center;overflow-wrap:break-word}.skipnav a{position:absolute;left:-10000px;width:1px;height:1px;overflow:hidden}.skipnav a:active,.skipnav a:focus{position:absolute;top:0;left:0;width:auto;height:auto;padding:1rem;font-size:1.8rem;color:#fff;background-color:#205375;overflow:visible;z-index:9999}.header{position:relative;margin:auto;display:flex;align-items:center;justify-content:center;flex-wrap:wrap-reverse;min-height:50vh;width:100%;padding:1em 0}.header:before{content:"";position:absolute;top:0;left:0;bottom:0;right:0;background-image:linear-gradient(rgba(25,64,91,.55),rgba(25,64,91,.55)),url(/static/img/szkola1lgm.jpg);background-size:cover;background-position:50%}.header__text{display:flex;position:relative;z-index:3;padding:2rem 3rem;text-align:center}.header__text h1{font-size:5.5rem;font-family:Rubik,sans-serif;line-height:1.5;color:#fff}.header__emblem{position:absolute;top:10px;left:30px;width:50px;z-index:3}.header__links{flex-wrap:wrap;width:100%;max-width:1000px;min-height:10rem;margin-top:-40px;margin-left:auto;margin-right:auto;z-index:5}.header__links,.header__links-link{display:flex;justify-content:center}.header__links-link{align-items:center;flex-wrap:wrap;flex:1 0 15rem;margin:.5em 1em;width:300px;padding:1em;font-size:2rem;font-weight:700;background-color:#efefef;color:#112b3c;box-shadow:0 0 10px rgba(0,0,0,.7);text-decoration:none;text-align:center;transition:transform .5s}.header__links-link:hover{transform:translateY(-4px);box-shadow:0 0 20px rgba(0,0,0,.7)}.header__links-link img{height:3.5rem;padding:0 .5em;margin-bottom:.3em}@media screen and (max-width:75em){.header__emblem{left:8px;width:40px}}@media screen and (max-width:62em){.header:before{background-image:linear-gradient(rgba(25,64,91,.55),rgba(25,64,91,.55)),url(/static/img/szkola1sm.jpg)}}@media screen and (max-width:48em){.header__text{padding:1rem;overflow-wrap:anywhere}.header__text h1{font-size:4.4rem}.header__links-link{flex-direction:column;flex:1 1 10rem;padding:.5em .3em;min-width:10rem;font-size:1.6rem}.header__links-link img{height:2.5rem}}@media screen and (max-width:31.25em){.header__emblem{left:10px;width:40px}.header__text{margin-top:-20px}.header__text h1{font-size:4rem}.header__links{margin-top:-40px}.header__links-link{margin:.5em}.header__links-link img{padding:0 .5em}}@media screen and (max-width:31.25em){.header__links-link{margin:.5em .25em}}.footer{width:100%;margin-top:auto}.footer,.footer__upper{display:flex;flex-direction:column}.footer__upper{position:relative;padding:1em 2em;margin-top:4rem;background-color:transparent;color:#fff}.footer__upper:before{content:"";position:absolute;top:0;left:0;bottom:0;right:0;background-image:linear-gradient(rgba(32,83,117,.7),rgba(32,83,117,.7)),url(/static/img/squareslg.jpg);background-size:cover;z-index:-2}.footer__upper-contact,.footer__upper-links{position:relative;display:flex;justify-content:center;align-items:center;flex-wrap:wrap;margin:0 auto}.footer__upper-contact *,.footer__upper-links *{margin:.5rem 1rem}.footer__upper-contact * .not-link,.footer__upper-links * .not-link{margin-left:0;margin-right:0}.footer__upper-contact{margin-bottom:1em;padding:1em}.footer__upper-contact--mail,.footer__upper-contact--phone{display:flex;align-items:center;overflow-wrap:anywhere}.footer__upper-contact--mail img,.footer__upper-contact--phone img{margin-right:0;width:2.4rem;height:2.4rem}.footer__upper-contact:after,.footer__upper-links:after{content:"";position:absolute;top:0;left:0;bottom:0;right:0;background-color:rgba(32,83,117,.9);z-index:-1}.footer__upper-links{padding:1rem .75em .25rem}.footer__upper-links .bip-box{display:flex;justify-content:center;align-items:center;width:-moz-min-content;width:min-content;background-color:#fff;border-radius:5px;margin:.5rem 1rem}.footer__upper-links .fb-link{display:flex;justify-content:center;align-items:center;margin:.5rem .5rem .5rem 0}.footer__upper-links .fb-link .fb{margin:-3px 0 0 .5rem;fill:#fff}.footer__upper-links .bip-link{height:3rem;margin:0 .5rem}.footer__upper-links a{text-decoration:none;color:#fff;transition:color .3s}.footer__upper-links a:hover{color:#f66b0e}.footer__upper-links .bip{height:100%;width:-moz-min-content;width:min-content;margin:0}.footer__bottom{display:flex;justify-content:space-evenly;align-items:center;flex-wrap:wrap;height:-moz-min-content;height:min-content;padding:1em;font-size:1.5rem;background-color:#fff;color:#000}.footer__bottom p{margin-top:.5em;text-align:center}.footer__bottom a{margin-top:.5em}@media screen and (max-width:62em){.footer__upper:before{background-image:linear-gradient(rgba(32,83,117,.7),rgba(32,83,117,.7)),url(/static/img/squaressm.jpg)}}@media screen and (max-width:37.5em){.footer__upper{padding:2em 0}}@media screen and (max-width:25em){.footer__upper{padding:1em 0}.footer__upper-contact{justify-content:flex-start}.footer__upper-contact--mail img,.footer__upper-contact--phone img{margin-right:.25em}.footer__upper-contact *,.footer__upper-links *{margin:.5rem 1rem}.footer__upper-links .fb-box{order:-1}.footer__upper-links .fb-box .fb{margin-left:0}}.allnews{padding-top:2rem}.allnews .posts__cards{padding:1rem 0 0}.allnews .posts__categories{border:none;background-color:#efefef}.allnews .posts__categories-link--gallery{margin-left:5rem;padding:.25em 1.25em;background-color:rgba(246,107,14,.8);color:#efefef}.allnews .posts__categories-link--gallery:active,.allnews .posts__categories-link--gallery:focus,.allnews .posts__categories-link--gallery:hover{box-shadow:0 0 6px #205375}.allnews .posts__main{transition:all .5s}.allnews .posts__main:active,.allnews .posts__main:focus,.allnews .posts__main:hover{box-shadow:0 0 25px rgba(0,0,0,.5);transform:translateY(-3px)}.allnews .posts__main-category{margin-bottom:0}.allnews .posts__main-details{position:absolute;top:5px;transform:translateX(-50%);left:50%}.allnews .posts__main-heading{font-family:Martel Sans,sans-serif;font-size:1.7rem;margin:0}.allnews .posts__main-newslink{color:#000;text-decoration:none}.allnews .posts__main-newslink:after{content:"";position:absolute;top:0;left:0;bottom:0;right:0}@media screen and (max-width:62em){.allnews .posts__cards{padding:3rem 0 0}}@media screen and (max-width:48em){.allnews{padding-top:0}}main .news ol,main .news ul{margin-left:2rem;padding-bottom:.5em}main .news p{padding-bottom:.5em}main .news a{color:#205375;font-weight:700;-webkit-text-decoration-color:#205375;text-decoration-color:#205375;text-decoration-thickness:1px;transition:-webkit-text-decoration-color .2s;transition:text-decoration-color .2s;transition:text-decoration-color .2s,-webkit-text-decoration-color .2s}main .news a:active,main .news a:focus,main .news a:hover{text-decoration-thickness:2px;-webkit-text-decoration-color:#f3a26b;text-decoration-color:#f3a26b}.news__aside{flex:0 0 350px;background-color:#efefef;font-size:1.4rem}.news__aside-list{padding-left:0;list-style:none;height:100%}.news__aside-item{position:relative;display:flex;justify-content:space-between;gap:8px;width:100%;padding:.75rem 1.5rem;transition:background-color .3s}.news__aside-item:focus-within,.news__aside-item:hover{background-color:#205375}.news__aside-item--txt{flex-grow:1}.news__aside-item--txt p{transition:color .3s}.news__aside-item--txt p:first-of-type{display:flex;align-items:center;position:relative;font-size:1.4rem;color:rgba(0,0,0,.7);z-index:2}.news__aside-item--txt p:first-of-type span{display:inline-block;padding:0 .5rem;margin-left:.5rem;background-color:rgba(32,83,117,.8);color:#efefef;font-weight:700;font-size:1.3rem;border-radius:4px}.news__aside-item--txt p:last-of-type{position:relative;font-weight:700;z-index:2}.news__aside-item--txt a{display:inline-block;text-decoration:none;color:#000}.news__aside-item--txt a:after{content:"";position:absolute;top:0;left:0;bottom:0;right:0}.news__aside-item--txt a:focus>p,.news__aside-item--txt a:focus>p>span,.news__aside-item--txt a:hover>p,.news__aside-item--txt a:hover>p>span{color:#efefef}.news__aside-item--img{width:80px;height:60px;flex-shrink:0;overflow:hidden}.news__aside-item--img img{width:100%;height:100%;object-fit:cover;object-position:center}.news__content{padding:2rem 0 1rem}.news__content p{line-height:1.7}.news__bannerimg{position:relative;max-width:calc(35% + 40px);min-width:250px;height:auto;overflow:hidden;float:left;padding-right:40px;padding-bottom:10px}.news__bannerimg a{position:relative;display:inline-block;width:100%;height:100%}.news__bannerimg a:hover:after,.news__bannerimg a:hover:before{opacity:1}.news__bannerimg a:after,.news__bannerimg a:before{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);opacity:0;transition:opacity .3s}.news__bannerimg a:after{content:url(/static/img/zoom.svg);width:40px;height:40px}.news__bannerimg a:before{content:"";min-width:80px;min-height:60px;background-color:#ddd;border-radius:50px}.news__bannerimg img{width:100%;height:100%;object-fit:cover;object-position:center}.news-gallery{display:flex;flex-direction:column}.news-gallery .gallery-link{display:inline-block;padding:.25em 1em;border-radius:20px;margin:2rem auto;color:#205375;font-weight:700;box-shadow:0 0 8px #205375;text-decoration:none;transition:all .3s}.news-gallery .gallery-link:focus,.news-gallery .gallery-link:hover{box-shadow:0 0 14px #205375;background-color:#efefef;color:#000;transform:translateY(-3px)}.news-gallery .gallery__list{display:grid;grid-template-columns:repeat(auto-fit,minmax(250px,1fr));grid-gap:10px;justify-content:space-between;margin:2rem 0}.news-gallery .gallery__list a{display:flex;max-width:420px}.news-gallery .gallery__list img{flex:0 1 500px;height:230px}@media screen and (max-width:75em){.news__aside{flex:0 0 300px}}@media screen and (max-width:62em){.news__aside{display:none}.news__bannerimg{max-width:600px;padding:0;float:none;clear:both;margin-bottom:20px}}@media screen and (max-width:48em){.news__content{padding:0}.news__bannerimg a:after,.news__bannerimg a:before{display:none}}@media screen and (max-width:31.25em){.news-gallery .gallery__list{display:grid;grid-template-columns:repeat(auto-fit,minmax(140px,1fr));grid-gap:8px;justify-content:space-between;margin:2rem 0}.news-gallery .gallery__list img{height:100px}}@media screen and (max-width:31.25em){.news-gallery .gallery img{height:120px}}.gallery__list{display:flex;flex-wrap:wrap;justify-content:flex-start;gap:20px;margin:2em 0}.gallery__list-item{position:relative;flex:0 1 300px;list-style:none;overflow:hidden}.gallery__list-item img{width:100%;height:200px;object-fit:cover;object-position:center;vertical-align:middle;transform:scale(1);transition:transform .7s}.gallery__list-item img:hover{transform:scale(1.15)}@media screen and (max-width:62em){.gallery__list{justify-content:center}}@media screen and (max-width:37.5em){.gallery__list-item{flex:0 1 350px}.gallery__list-item img{height:auto}}.calendar__month{display:flex;padding:1rem 2rem}.calendar__month-heading{flex:1 0 20%;margin:1rem 0}.calendar__month-heading h2{font-size:1.8rem}.calendar__month-events{width:100%;padding:0 2rem;border-left:3px solid #205375}.calendar__month-events div:last-of-type{border-bottom:none}.calendar__month:nth-child(2n){background-color:#efefef}.calendar__event{display:flex;margin:0;padding:.5rem 0;border-bottom:1px solid rgba(0,0,0,.2)}.calendar__event-date{flex:0 0 7rem}.calendar__event-date--1,.calendar__event-date--2{display:block;margin-right:10px;padding:.2em;border:1px solid rgba(0,0,0,.4);text-align:center}.calendar__event-date--1{border-bottom:none;font-weight:700}.calendar__event-details--name{font-weight:700}.calendar__event-details--description{margin-top:1rem}@media screen and (max-width:37.5em){.calendar__month{padding:1rem;flex-direction:column}.calendar__month-events{border-left:none;padding:0}.calendar__month-heading{margin:1rem 0 0}}.ordinary{align-items:flex-start;margin-top:4rem;margin-bottom:3rem}.ordinary h2{font-size:1.9rem;margin-top:2rem;margin-bottom:2rem}.ordinary h3{font-size:1.8rem;margin-top:2rem;margin-bottom:1rem}.ordinary img,.ordinary p{margin-bottom:.75rem}.ordinary ol,.ordinary ul{margin-left:3rem;padding-bottom:1rem}.introduction{padding:1rem 0}.subpage-heading{position:relative;padding:4rem 0;color:#efefef;z-index:2}.subpage-heading:before{content:"";position:absolute;top:0;left:0;bottom:0;right:0;background-image:linear-gradient(rgba(32,83,117,.7),rgba(32,83,117,.7)),url(/static/img/squareslg.jpg);background-size:cover;background-position:top;z-index:-1}.subpage-heading h1{line-height:1.6}.subpage-heading h1:first-letter{display:inline-block;margin-right:3px;color:#f66b0e;background-color:rgba(32,83,117,.5);font-size:165%;border:6px solid #efefef;border-radius:10px;padding:0 .2em}@media screen and (max-width:62em){.ordinary{margin-top:2rem;margin-bottom:2rem}.subpage-heading:before{background-image:linear-gradient(rgba(32,83,117,.7),rgba(32,83,117,.7)),url(/static/img/squaressm.jpg);background-position:bottom}}@media screen and (max-width:48em){.ordinary h2{margin-top:2rem;margin-bottom:1rem}.ordinary ol,.ordinary ul{margin-left:2rem;padding-bottom:.75rem}.subpage-heading{padding:3rem 0}.subpage-heading h1:first-letter{font-size:130%}}@media screen and (max-width:37.5em){.subpage-heading{padding:2rem 0}}.teachers__box{display:flex;flex-wrap:wrap;justify-content:center;max-width:100%}.teachers__image{flex:0 1 500px;overflow:hidden;margin:3rem}.teachers__image img{width:100%;object-fit:cover;object-position:center}.teachers__list{flex:1 1 50%;margin-bottom:2rem}.teachers__intro,.teachers__list{margin-top:3rem}.teachers__subject{display:flex;padding:1rem 0;border-bottom:1px solid rgba(0,0,0,.1)}.teachers__subject span{flex:1 1 50%;font-weight:700}.teachers__names{flex:0 1 60%;list-style:none}.teachers__names-name{padding-left:30px}@media screen and (max-width:37.5em){.teachers__image{margin:3rem 0}}@media screen and (max-width:25em){.teachers__subject{flex-direction:column}.teachers__subject span{flex:auto}}.index__list{list-style:none}.index__item{padding:1rem 0}.index__link{font-size:1.7rem;color:#205375;font-weight:700;-webkit-text-decoration-color:transparent;text-decoration-color:transparent;text-decoration-thickness:2px;transition:-webkit-text-decoration-color .2s;transition:text-decoration-color .2s;transition:text-decoration-color .2s,-webkit-text-decoration-color .2s;text-underline-offset:3px}.index__link:active,.index__link:focus,.index__link:hover{text-decoration-thickness:2px;-webkit-text-decoration-color:#f3a26b;text-decoration-color:#f3a26b}.search__list{margin-left:1rem}.search__pagination{display:flex;justify-content:center;flex-wrap:wrap;margin-top:2rem}.search__pagination-link{display:inline-block;padding:.25em .5em;box-shadow:0 0 2px rgba(0,0,0,.5);color:#000;-webkit-text-decoration-color:transparent;text-decoration-color:transparent;text-underline-offset:3px;transition:background-color .3s,-webkit-text-decoration-color .3s;transition:background-color .3s,text-decoration-color .3s;transition:background-color .3s,text-decoration-color .3s,-webkit-text-decoration-color .3s}.search__pagination-link:active,.search__pagination-link:focus,.search__pagination-link:hover{background-color:rgba(246,107,14,.8);-webkit-text-decoration-color:#000;text-decoration-color:#000}.galleryall{padding:0 2rem}.galleryall .posts__cards{display:flex;flex-wrap:wrap;padding:3rem 0;justify-content:flex-start}.galleryall .posts__main{flex:0 0 300px}.galleryall .posts__main-gallerylink{display:block;text-decoration:none;margin:auto .5em;color:#000}.galleryall .posts__main-gallerylink:after{content:"";position:absolute;top:0;left:0;bottom:0;right:0}.galleryall .posts__main-heading{font-size:1.7rem;margin:.5em 0}.galleryall .posts__main .img-wrapper{flex:0 1 200px}.galleryall .posts__main--secondary{max-width:400px;margin:0;transition:all .3s}.galleryall .posts__main--secondary:active,.galleryall .posts__main--secondary:focus,.galleryall .posts__main--secondary:hover{box-shadow:0 0 25px rgba(0,0,0,.5);transform:translateY(-3px)}@media screen and (max-width:62em){.galleryall .posts__cards{justify-content:center;padding:1.5rem 0}}@media screen and (max-width:25em){.galleryall{padding:0 .5rem}.galleryall .posts__cards{padding:1rem 0}}.contact{width:100%;display:flex;flex-wrap:wrap;justify-content:space-between;gap:30px;margin-bottom:3rem}.contact__info{flex:1 1 50%;display:flex;flex-direction:column;justify-content:space-around}.contact__info-bottom{padding-bottom:1rem}.contact__additional_info{padding-top:1rem;border-top:2px solid rgba(0,0,0,.2)}.contact__additional_info a{color:#205375;font-weight:700}.contact__additional_info p{padding-top:1rem}.contact__img-img{width:100%;height:100%;object-fit:cover;object-position:center}@media screen and (max-width:37.5em){.contact{margin-bottom:1rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
